{"version":3,"sources":["../node_modules/jspdf/dist sync","ParcelTable.js","OutOfStateTableData.js","OutOfCityTableData.js","LowConditionTableData.js","MainAppBar.js","About.js","OutOfStateGroupedTableData.js","OutOfCityGroupedTableData.js","LowConditionGroupedTableData.js","MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MaterialTableDemo","tableData","title","columns","parcels","useEffect","ReactGA","window","location","pathname","data","options","pageSize","pageSizeOptions","emptyRowsWhenPaging","rowStyle","height","exportButton","outOfStateTableData","field","outOfCityTableData","lowConditionTableData","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","listItemText","fontSize","MainAppBar","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","text","link","exact","map","menuItem","key","to","style","textDecoration","activeStyle","ListItem","button","ListItemText","primary","paddingLeft","paddingTop","children","About","Fragment","href","fontWeight","outOfNebraskaGroupedTableData","defaultSort","outOfCityGroupedTableData","lowConditionGroupedTableData","MainRouter","basename","path","App","initialize","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,4h6xKCHV,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,UAC/BC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QAIxB,OAFAC,qBAAU,kBAAMC,IAAiBC,OAAOC,SAASC,YAAW,IAGxD,kBAAC,IAAD,CACIP,MAAOA,EACPC,QAASA,EACTO,KAAMN,EACNO,QAAS,CACLC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,qBAAqB,EACrBC,SAAU,CAAEC,OAAQ,IACpBC,cAAc,K,IClBjBC,EAAsB,CAC/BhB,MAAO,yBACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,cAC7B,CAACjB,MAAO,gBAAiBiB,MAAO,YAChC,CAACjB,MAAO,cAAeiB,MAAO,cAC9B,CAACjB,MAAO,mBAAoBiB,MAAO,cACnC,CAACjB,MAAO,gBAAiBiB,MAAO,aAChC,CAACjB,MAAO,mBAAoBiB,MAAO,WACnC,CAACjB,MAAO,qBAAsBiB,MAAO,cAEzCf,Q,QCXSgB,EAAqB,CAC9BlB,MAAO,yBACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,cAC7B,CAACjB,MAAO,gBAAiBiB,MAAO,YAChC,CAACjB,MAAO,aAAciB,MAAO,cAC7B,CAACjB,MAAO,mBAAoBiB,MAAO,cACnC,CAACjB,MAAO,gBAAiBiB,MAAO,aAChC,CAACjB,MAAO,mBAAoBiB,MAAO,WACnC,CAACjB,MAAO,qBAAsBiB,MAAO,cAEzCf,Q,QCXSiB,EAAwB,CACjCnB,MAAO,2BACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,cAC7B,CAACjB,MAAO,gBAAiBiB,MAAO,YAChC,CAACjB,MAAO,aAAciB,MAAO,cAC7B,CAACjB,MAAO,cAAeiB,MAAO,cAC9B,CAACjB,MAAO,mBAAoBiB,MAAO,cACnC,CAACjB,MAAO,gBAAiBiB,MAAO,aAChC,CAACjB,MAAO,mBAAoBiB,MAAO,WACnC,CAACjB,MAAO,qBAAsBiB,MAAO,cAEzCf,Q,yMCMEkB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbW,IAaX,OACLC,WAdgB,IAehBT,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAajB,EAAMkB,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MA3BgB,IA4BhBS,WAAY,GAEdC,YAAa,CACXV,MA/BgB,KAiClBW,aAAa,yBACXrB,QAAS,OACTsB,WAAY,SACZC,QAASzB,EAAMkB,QAAQ,EAAG,IAEvBlB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASzB,EAAMkB,QAAQ,GACvBd,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEvCG,YAhDgB,KAkDlBkB,aAAc,CACZ3B,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,iBAEvCF,WAAY,GAEdmB,aAAc,CACZC,SAAU,cAIC,SAASC,EAAWC,GACjC,IAAMC,EAAUtC,IACVE,EAAQqC,cAF0B,EAGhBC,IAAMC,UAAS,GAHC,mBAGjCC,EAHiC,KAG3BC,EAH2B,KAaxC,OACE,yBAAKC,UAAWN,EAAQnC,MACtB,kBAAC0C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACTH,UAAWI,YAAKV,EAAQjC,OAAT,eACZiC,EAAQzB,YAAc6B,KAGzB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QArBe,WACvBV,GAAQ,IAqBAW,KAAK,QACLV,UAAWI,YAAKV,EAAQpB,WAAYwB,GAAQJ,EAAQjB,OAEpD,kBAAC,IAAD,OAEF,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,wBAKJ,kBAACC,EAAA,EAAD,CACEd,UAAWN,EAAQhB,OACnBkC,QAAQ,aACRG,OAAO,OACPjB,KAAMA,EACNJ,QAAS,CACPsB,MAAOtB,EAAQd,cAGjB,yBAAKoB,UAAWN,EAAQb,cACtB,kBAACyB,EAAA,EAAD,CAAYG,QAtCM,WACxBV,GAAQ,KAsCqB,QAApBzC,EAAM2D,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CAAC,CAACC,KAAM,OAAQC,KAAM,IAAKC,OAAO,GACjC,CAACF,KAAM,eAAgBC,KAAM,iBAC7B,CAACD,KAAM,eAAgBC,KAAM,iBAC7B,CAACD,KAAM,gBAAiBC,KAAM,kBAC9B,CAACD,KAAM,QAASC,KAAM,WACtBE,KAAI,SAACC,GAAD,OACJ,kBAAC,IAAD,CAASC,IAAKD,EAASJ,KAAMM,GAAIF,EAASH,KACjCM,MAAO,CAACC,eAAgB,OAAQrB,MAAO,QAASrC,MAAO,QACvD2D,YAAa,CAACtB,MAAO,WAAYe,MAAOE,EAASF,OACxD,kBAACQ,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,CAActC,QAAS,CAACuC,QAASvC,EAAQJ,cAAe2C,QAAST,EAASJ,KAAMO,MAAO,CAACO,YAAa,OAAQC,WAAY,gBAMnI,0BACEnC,UAAWI,YAAKV,EAAQP,QAAT,eACZO,EAAQL,aAAeS,KAG1B,yBAAKE,UAAWN,EAAQb,eAEvBY,EAAM2C,WC1JR,SAASC,IAGZ,OAFAlG,qBAAU,kBAAMC,IAAiB,WAAU,IAEpC,kBAAC,IAAMkG,SAAP,KACH,kBAAC3B,EAAA,EAAD,CAAYC,QAAS,MAArB,SACA,kBAACD,EAAA,EAAD,4DAEI,uBAAG4B,KAAM,2DAAT,4CAFJ,mEAII,uBAAGA,KAAM,2BAAT,gCAJJ,qJAQA,kBAACpB,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAYgB,MAAO,CAACa,WAAY,MAAhC,kBADJ,qEAGA,kBAACV,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAYgB,MAAO,CAACa,WAAY,MAAhC,iBADJ,uFAGA,kBAACV,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAYgB,MAAO,CAACa,WAAY,MAAhC,kBADJ,6DAIJ,kBAAC7B,EAAA,EAAD,kMAKA,kBAACA,EAAA,EAAD,iMAIA,kBAACA,EAAA,EAAD,2FAGA,kBAACA,EAAA,EAAD,6DAIA,kBAACA,EAAA,EAAD,2IAIA,kBAACA,EAAA,EAAD,2H,IChDK8B,EAAgC,CACzCzG,MAAO,kDACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,SAC7B,CAACjB,MAAO,uBAAwBiB,MAAO,iBAAkByF,YAAa,SAE1ExG,Q,QCNSyG,EAA4B,CACrC3G,MAAO,kDACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,SAC7B,CAACjB,MAAO,uBAAwBiB,MAAO,iBAAkByF,YAAa,SAE1ExG,Q,QCNS0G,EAA+B,CACxC5G,MAAO,mDACPC,QAAS,CACL,CAACD,MAAO,aAAciB,MAAO,SAC7B,CAACjB,MAAO,uBAAwBiB,MAAO,iBAAkByF,YAAa,SAE1ExG,Q,QCIW,SAAS2G,IACpB,OACI,kBAAC,IAAD,CAAQC,SAAU,YACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,iBACR,kBAACvD,EAAD,KACI,kBAAC,EAAD,CAAazD,UAAWiB,MAGhC,kBAAC,IAAD,CAAO+F,KAAK,iBACR,kBAACvD,EAAD,KACI,kBAAC,EAAD,CAAazD,UAAWmB,MAGhC,kBAAC,IAAD,CAAO6F,KAAK,kBACR,kBAACvD,EAAD,KACI,kBAAC,EAAD,CAAazD,UAAWoB,MAGhC,kBAAC,IAAD,CAAO4F,KAAK,UACR,kBAACvD,EAAD,KACI,kBAAC6C,EAAD,QAGR,kBAAC,IAAD,CAAOU,KAAK,IAAIzB,OAAO,GACnB,kBAAC9B,EAAD,KACI,kBAAC,EAAD,CAAazD,UAAW6G,IACxB,kBAAC,EAAD,CAAa7G,UAAW0G,IACxB,kBAAC,EAAD,CAAa1G,UAAW4G,QCvBjCK,MAZf,WAKE,OAHE7G,qBAAU,WACNC,IAAQ6G,WAAW,qBAGvB,kBAAC,IAAMX,SAAP,KACE,kBAACO,EAAD,QCAcK,QACW,cAA7B7G,OAAOC,SAAS6G,UAEe,UAA7B9G,OAAOC,SAAS6G,UAEhB9G,OAAOC,SAAS6G,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.59a78f2a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 328;","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from 'material-table';\nimport * as ReactGA from \"react-ga\";\n\nexport default function MaterialTableDemo({tableData}) {\n    const { title, columns, parcels } = tableData;\n\n    useEffect(() => ReactGA.pageview(window.location.pathname), []);\n\n    return (\n        <MaterialTable\n            title={title}\n            columns={columns}\n            data={parcels}\n            options={{\n                pageSize: 10,\n                pageSizeOptions: [10, 40, 100],\n                emptyRowsWhenPaging: false,\n                rowStyle: { height: 75 },\n                exportButton: true,\n            }\n            }\n        />\n    );\n}\nMaterialTableDemo.propTypes = {\n    tableData: PropTypes.object,\n};\n","import outOfStateParcels from \"./data/ownerOutOfNebraskaParcels.json\";\n\nexport const outOfStateTableData = {\n    title: \"Out of state landlords\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner State', field: 'OWNER_STAT'},\n        {title: 'Property Address', field: 'ADDRESS_LA'},\n        {title: 'Property City', field: 'PROP_CITY'},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: outOfStateParcels,\n}\n","import outOfCityParcels from \"./data/ownerInNebraskaOutOfOmahaParcels.json\";\n\nexport const outOfCityTableData = {\n    title: \"Out of Omaha landlords\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner City', field: 'OWNER_CITY'},\n        {title: 'Property Address', field: 'ADDRESS_LA'},\n        {title: 'Property City', field: 'PROP_CITY'},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: outOfCityParcels,\n}\n","import lowConditionParcels from \"./data/lowPoorWornOutConditionParcels.json\";\n\nexport const lowConditionTableData = {\n    title: \"Low condition properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER_NAME'},\n        {title: 'Owner Address', field: 'ADDRESS2'},\n        {title: 'Owner City', field: 'OWNER_CITY'},\n        {title: 'Owner State', field: 'OWNER_STAT'},\n        {title: 'Property Address', field: 'ADDRESS_LA'},\n        {title: 'Property City', field: 'PROP_CITY'},\n        {title: 'Property Quality', field: 'QUALITY'},\n        {title: 'Property Condition', field: 'CONDITION'},\n    ],\n    parcels: lowConditionParcels,\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {NavLink} from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  listItemText: {\n    fontSize: '1.3rem'\n  }\n}));\n\nexport default function MainAppBar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline/>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Landlords of Omaha\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon/>\n            ) : (\n              <ChevronRightIcon/>\n            )}\n          </IconButton>\n        </div>\n        <Divider/>\n        <List>\n          {[{text: \"Home\", link: \"/\", exact: true},\n            {text: \"Out of Omaha\", link: \"/out-of-omaha\"},\n            {text: \"Out of State\", link: \"/out-of-state\"},\n            {text: \"Low Condition\", link: \"/low-condition\"},\n            {text: \"About\", link: \"/about\"}\n          ].map((menuItem) => (\n            <NavLink key={menuItem.text} to={menuItem.link}\n                     style={{textDecoration: 'none', color: 'black', width: '100%'}}\n                     activeStyle={{color: '#3f51b5'}} exact={menuItem.exact}>\n              <ListItem button>\n                <ListItemText classes={{primary: classes.listItemText}} primary={menuItem.text} style={{paddingLeft: '10px', paddingTop: '5px'}}/>\n              </ListItem>\n            </NavLink>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader}/>\n        {/* eslint-disable-next-line react/prop-types */}\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport * as ReactGA from \"react-ga\";\n\nexport function About() {\n    useEffect(() => ReactGA.pageview('About'), []);\n\n    return <React.Fragment>\n        <Typography variant={'h2'}>About</Typography>\n        <Typography>\n            Landlords of Omaha displays searchable data from the \n            <a href={\"https://data-dogis.opendata.arcgis.com/datasets/parcels\"}>Omaha/Douglas County GIS parcels dataset</a>\n            and was created by volunteers from Open/Nebraska with input from\n            <a href={\"https://www.prineb.org/\"}>Policy Research & Innovation</a>.\n            There are three options for what you see on this website, which you can see by clicking on the three\n            little bars in the upper left hand corner.\n        </Typography>\n        <List>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Out of Omaha: </Typography> Properties owned by people or companies located outside of Omaha\n            </ListItem>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Out of State:</Typography> Omaha properties that are owned by people or companies located outside of Nebraska\n            </ListItem>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Low Condition:</Typography> Omaha properties that are in Poor to Worn Out condition\n            </ListItem>\n        </List>\n        <Typography>\n            The table data is searchable. If you want to view only owners located in\n            Omaha, simply enter omaha in the Search box by the upper right hand corner.\n            Any column can be sorted up or down.\n        </Typography>\n        <Typography>\n            So you can sort by Owner Name or Owner Address or Owner City, etc. You\n            can even do this after you have created a view of, say - Owner City as Omaha – as in the previous paragraph.\n        </Typography>\n        <Typography>\n            Property Quality refers to the durability of the building when it was constructed.\n        </Typography>\n        <Typography>\n            Property Condition\n            means just what you would expect.\n        </Typography>\n        <Typography>\n            Properties which do not display Property Quality or Property Condition are generally empty lots, parking\n            lots, tennis courts, etc.\n        </Typography>\n        <Typography>\n            When sorting by STATE (owner state of residence), the abbreviation AE stands for U.S. Armed Forces –\n            Europe.\n        </Typography>\n    </React.Fragment>\n}\n","import outOfNebraskaGroupedData from \"./data/ownerOutOfNebraskaGrouping.json\";\n\nexport const outOfNebraskaGroupedTableData = {\n    title: \"Out of State Landlords with the most properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Number of Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc'},\n    ],\n    parcels: outOfNebraskaGroupedData,\n}\n","import outOfCityGroupedData from \"./data/ownerInNebraskaOutOfOmahaGrouping.json\";\n\nexport const outOfCityGroupedTableData = {\n    title: \"Out of Omaha landlords with the most properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Number of Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc'},\n    ],\n    parcels: outOfCityGroupedData,\n}\n","import lowConditionGroupedData from './data/lowPoorWornOutConditionGrouping.json'\n\nexport const lowConditionGroupedTableData = {\n    title: \"Landlords with the most low condition properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Number of Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc'},\n    ],\n    parcels: lowConditionGroupedData,\n}\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ParcelTable from \"./ParcelTable\";\nimport React from \"react\";\nimport {outOfStateTableData} from \"./OutOfStateTableData\"\nimport {outOfCityTableData} from \"./OutOfCityTableData\";\nimport {lowConditionTableData} from \"./LowConditionTableData\";\nimport MainAppBar from \"./MainAppBar\";\nimport {About} from \"./About\";\nimport {outOfNebraskaGroupedTableData} from \"./OutOfStateGroupedTableData\";\nimport {outOfCityGroupedTableData} from \"./OutOfCityGroupedTableData\";\nimport {lowConditionGroupedTableData} from \"./LowConditionGroupedTableData\";\n\nexport default function MainRouter() {\n    return (\n        <Router basename={\"landlord\"}>\n            <Switch>\n                <Route path=\"/out-of-state\">\n                    <MainAppBar>\n                        <ParcelTable tableData={outOfStateTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/out-of-omaha\">\n                    <MainAppBar>\n                        <ParcelTable tableData={outOfCityTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/low-condition\">\n                    <MainAppBar>\n                        <ParcelTable tableData={lowConditionTableData}/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/about\">\n                    <MainAppBar>\n                        <About/>\n                    </MainAppBar>\n                </Route>\n                <Route path=\"/\" exact={true}>\n                    <MainAppBar>\n                        <ParcelTable tableData={lowConditionGroupedTableData}/>\n                        <ParcelTable tableData={outOfNebraskaGroupedTableData}/>\n                        <ParcelTable tableData={outOfCityGroupedTableData}/>\n                    </MainAppBar>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport ReactGA from 'react-ga';\nimport \"./App.css\";\nimport MainRouter from \"./MainRouter\";\n\nfunction App() {\n\n    useEffect(() => {\n        ReactGA.initialize('UA-175185008-1');\n    })\n  return (\n    <React.Fragment>\n      <MainRouter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}